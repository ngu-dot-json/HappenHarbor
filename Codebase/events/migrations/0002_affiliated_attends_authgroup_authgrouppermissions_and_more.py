# Generated by Django 4.2.7 on 2023-12-09 07:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliated',
            fields=[
                ('group_id', models.IntegerField(db_column='Group_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Affiliated',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attends',
            fields=[
                ('u_username', models.CharField(db_column='U_username', max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Attends',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dates',
            fields=[
                ('date_code', models.DateField(db_column='Date_Code', primary_key=True, serialize=False)),
                ('no_of_events', models.CharField(blank=True, db_column='No_of_Events', max_length=255, null=True)),
                ('events_occuring', models.CharField(blank=True, db_column='Events_Occuring', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Dates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('guest_id', models.IntegerField(db_column='Guest_ID', primary_key=True, serialize=False)),
                ('g_type', models.CharField(db_column='G_Type', max_length=255)),
                ('g_name', models.CharField(db_column='G_name', max_length=255)),
            ],
            options={
                'db_table': 'Guest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationsVenue',
            fields=[
                ('address', models.CharField(db_column='Address', max_length=255, primary_key=True, serialize=False)),
                ('l_owner', models.CharField(db_column='L_Owner', max_length=255)),
                ('l_name', models.CharField(db_column='L_Name', max_length=255)),
                ('city', models.CharField(db_column='City', max_length=255)),
                ('province_state', models.CharField(db_column='Province_state', max_length=255)),
                ('country', models.CharField(db_column='Country', max_length=255)),
            ],
            options={
                'db_table': 'Locations_Venue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attended_events', models.CharField(blank=True, db_column='Attended_Events', db_comment='Attended Events (opt)', max_length=255, null=True)),
                ('saved_events', models.CharField(blank=True, db_column='Saved_Events', db_comment='Saved Events (opt)', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroups',
            fields=[
                ('group_id', models.AutoField(db_column='Group_ID', primary_key=True, serialize=False)),
                ('ug_name', models.CharField(db_column='UG_Name', max_length=255)),
            ],
            options={
                'db_table': 'User_Groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('c_name', models.CharField(db_column='C_name', max_length=255, primary_key=True, serialize=False)),
                ('c_owner', models.CharField(db_column='C_owner', max_length=255)),
                ('types_of_product', models.CharField(db_column='Types_of_Product', max_length=255)),
                ('v_address', models.CharField(db_column='V_address', max_length=255)),
            ],
            options={
                'db_table': 'Vendors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArrangesGuests',
            fields=[
                ('guest', models.OneToOneField(db_column='Guest_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.guest')),
            ],
            options={
                'db_table': 'Arranges_Guests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArrangesVendor',
            fields=[
                ('v_name', models.OneToOneField(db_column='V_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.vendors')),
                ('booth_no', models.IntegerField(db_column='Booth_no')),
            ],
            options={
                'db_table': 'Arranges_Vendor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasGuests',
            fields=[
                ('guest', models.OneToOneField(db_column='Guest_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.guest')),
            ],
            options={
                'db_table': 'Has_Guests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasVendors',
            fields=[
                ('v_name', models.OneToOneField(db_column='V_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.vendors')),
            ],
            options={
                'db_table': 'Has_Vendors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IsAt',
            fields=[
                ('l_address', models.OneToOneField(db_column='L_Address', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.locationsvenue')),
            ],
            options={
                'db_table': 'Is_at',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IsOn',
            fields=[
                ('date_code', models.OneToOneField(db_column='Date_Code', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.dates')),
            ],
            options={
                'db_table': 'Is_on',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartOf',
            fields=[
                ('group', models.OneToOneField(db_column='Group_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.usergroups')),
            ],
            options={
                'db_table': 'Part_of',
                'managed': False,
            },
        ),
    ]
